<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'debug.argument_resolver.service' shared service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\http-kernel\\Controller\\ArgumentValueResolverInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\http-kernel\\Controller\\ArgumentResolver\\ServiceValueResolver.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\http-kernel\\Controller\\ArgumentResolver\\TraceableValueResolver.php';

return $this->privates['debug.argument_resolver.service'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver(new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver(new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Controller\\LoginController::confirm' => function () {
    return ($this->privates['.service_locator.jld4zZf'] ?? $this->load('get_ServiceLocator_Jld4zZfService.php'));
}, 'App\\Controller\\LoginController::login' => function () {
    return ($this->privates['.service_locator.xJ_gBvk'] ?? $this->load('get_ServiceLocator_XJGBvkService.php'));
}, 'App\\Controller\\RegisterController::register' => function () {
    return ($this->privates['.service_locator.czpZ_vG'] ?? $this->load('get_ServiceLocator_CzpZVGService.php'));
}, 'App\\Controller\\LoginController:confirm' => function () {
    return ($this->privates['.service_locator.jld4zZf'] ?? $this->load('get_ServiceLocator_Jld4zZfService.php'));
}, 'App\\Controller\\LoginController:login' => function () {
    return ($this->privates['.service_locator.xJ_gBvk'] ?? $this->load('get_ServiceLocator_XJGBvkService.php'));
}, 'App\\Controller\\RegisterController:register' => function () {
    return ($this->privates['.service_locator.czpZ_vG'] ?? $this->load('get_ServiceLocator_CzpZVGService.php'));
}))), ($this->privates['debug.stopwatch'] ?? $this->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)));
